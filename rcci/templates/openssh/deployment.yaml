apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  # This uses a "fullname" template (see _helpers)
  # Basing names on .Release.Name means that the same chart can be installed
  # multiple times into the same namespace.
  name: {{ .Release.Name }}-{{ .Chart.Name }}-git
  labels:
    # The "app.kubernetes.io/managed-by" label is used to track which tool
    # deployed a given chart. It is useful for admins who want to see what
    # releases a particular tool is responsible for.
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    # The "app.kubernetes.io/instance" convention makes it easy to tie a release
    # to all of the Kubernetes resources that were created as part of that
    # release.
    app.kubernetes.io/instance: {{ .Release.Name }}
    # This makes it easy to audit chart usage.
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ .Chart.Name }}-git
spec:
  replicas: {{ .Values.openssh.replicas }}
  template:
    metadata:
      {{- if .Values.openssh.podAnnotations }}
      # Allows custom annotations to be specified
      annotations:
        {{- toYaml .Values.openssh.podAnnotations | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}-git
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      restartPolicy: {{ .Values.openssh.restartPolicy }}
      containers:
        - name: {{ .Chart.Name }}-git
          image: "{{ .Values.openssh.image }}"
          imagePullPolicy: {{ .Values.openssh.imagePullPolicy }}
          ports:
            - name: ssh
              containerPort: 22
              protocol: TCP
          # volumeMounts:
          #   - name: userdata
          #     subPath: home
          #     mountPath: /home
          #   - name: userdata
          #     subPath: authorized-keys
          #     mountPath: /etc/ssh/authorized-keys
          resources:
            # Allow chart users to specify resources. Usually, no default should
            # be set, so this is left to be a conscious choice to the chart
            # users and avoids that charts don't run out of the box on, e. g.,
            # Minikube when high resource requests are specified by default.
            {{- toYaml .Values.openssh.resources | nindent 12 }}
            # - name: {{ .Chart.Name }}-users-authorized-keys-fs-consumer
            #   image: "{{ .Values.usersAuthorizedKeysFsConsumer.image }}"
            #   imagePullPolicy: {{ .Values.usersAuthorizedKeysFsConsumer.imagePullPolicy }}
            #   command: ["sh", "-c", "node consumer --constants.hosts=$FERO_WORKER_IP"]
            #   volumeMounts:
            #     - name: userdata
            #       subPath: home
            #       mountPath: /home
            #     - name: userdata
            #       subPath: authorized-keys
            #       mountPath: /etc/ssh/authorized-keys
            #   env:
            #     - name: DEBUG
            #       value: "*"
            #     - name: FERO_WORKER_IP
            #       valueFrom:
            #         fieldRef:
            #           fieldPath: status.podIP
      volumes:
        - name: userdata
          emptyDir: {}
      {{- if .Values.openssh.nodeSelector }}
      nodeSelector:
        # Node selectors can be important on mixed Windows/Linux clusters.
        {{- toYaml .Values.openssh.nodeSelector | nindent 8 }}
      {{- end }}
